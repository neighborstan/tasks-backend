//import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
//    id "org.openapi.generator" version "$openapiGeneratorVersion"
}

group rootProject.group
version rootProject.version

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'


////https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-gradle-plugin
////https://github.com/OpenAPITools/openapi-generator/blob/master/docs/generators/spring.md
//tasks.create("openApiGenerateApi", GenerateTask.class, {
//    generatorName = "spring"
//    inputSpec = "$rootDir/api.yaml".toString()
//    outputDir = "$buildDir/generated/api".toString()
//    modelPackage = "tech.saas.tasks.api.models"
//    apiPackage = "tech.saas.tasks.api.controllers"
////    modelNamePrefix = "Api"
//    removeOperationIdPrefix = true
//    skipOperationExample = true
//    skipValidateSpec = true
//    generateModelTests = false
//    generateApiTests = false
//    generateApiDocumentation = false
//    apiFilesConstrainedTo = [""]
//    modelFilesConstrainedTo = [""]
//    configOptions = [
//            dateLibrary         : "java8",
//            useBeanValidation   : "false",
//            sourceFolder        : "src/gen/java",
//            openApiNullable     : "false",
////            useSpringController    : "true",
//            interfaceOnly       : "true",
//            skipDefaultInterface: "true",
//    ]
//    typeMappings = ['string+period': "Period"]
//    importMappings = [Period: "java.time.Period"]
//})
//
//configurations {
//    testAnnotationProcessor {
//        extendsFrom annotationProcessor
//    }
//    testCompileOnly {
//        extendsFrom compileOnly
//    }
//}
//
//compileJava.dependsOn tasks.openApiGenerateApi
//
//sourceSets {
//    main {
//        java {
//            srcDirs += "$buildDir/generated/api/src/gen/java"
//        }
//    }
//}

dependencies {

    implementation project(":core")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation "io.swagger.core.v3:swagger-annotations:2.2.19"

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'org.mapstruct:mapstruct:1.5.3.Final'

}

test {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "api.jar"
    exclude("application.yml")
}